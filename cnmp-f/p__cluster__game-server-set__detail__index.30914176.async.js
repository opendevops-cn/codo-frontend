"use strict";(self.webpackChunkcnmp=self.webpackChunkcnmp||[]).push([[722],{77613:function(e,n,l){l.r(n);var a=l(26068),t=l.n(a),s=l(48305),r=l.n(s),i=l(15268),d=l(79890),c=l(34654),o=l(2586),u=l(38218),p=l(21630),x=l(3827),h=l(70334),j=l(18772),m=l(22639),P=l(96286),g=l(69180),Z=(l(50959),l(11527)),b=function(e){var n=e.onCancel,l=e.onOk,a=e.initialValues,s=p.Z.useForm(),d=r()(s,1)[0],c=(0,u.useParams)(),o=c.clusterName,g=void 0===o?"":o,b=c.name,f=void 0===b?"":b,v=c.namespace,y=void 0===v?"":v,I=p.Z.useWatch("update_strategy_type",d);return(0,Z.jsx)(x.Z,{title:"更新策略",open:!0,width:900,onCancel:n,onOk:function(){d.validateFields().then((function(e){(0,i.UP)(t()({cluster_name:g,name:f,namespace:y},e)).then((function(){l(),h.ZP.success("更新策略成功")}))}))},children:(0,Z.jsxs)(p.Z,{form:d,labelCol:{span:5},initialValues:a,children:[(0,Z.jsx)(p.Z.Item,{name:"update_strategy_type",label:"更新方式",initialValue:"RollingUpdate",children:(0,Z.jsxs)(j.ZP.Group,{children:[(0,Z.jsx)(j.ZP,{value:"RollingUpdate",children:"滚动更新 RollingUpdate"}),(0,Z.jsx)(j.ZP,{value:"OnDelete",children:"删除后更新 OnDelete"})]})}),(0,Z.jsx)(p.Z.Item,{name:"pod_update_strategy_type",label:"pod更新策略",initialValue:"InPlaceIfPossible",children:(0,Z.jsxs)(j.ZP.Group,{children:[(0,Z.jsx)(j.ZP,{value:"InPlaceIfPossible",children:"优先原地升级 InPlaceIfPossible"}),(0,Z.jsx)(j.ZP,{value:"InPlaceOnly",children:"仅原地升级 InPlaceOnly"}),(0,Z.jsx)(j.ZP,{value:"Recreate",children:"重新创建ReCreate"})]})}),"RollingUpdate"===I&&(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)(p.Z.Item,{name:"partition",label:"分片",initialValue:0,rules:[{required:!0,message:"分片不能为空"},{pattern:/^(0|[1-9]\d*)$/,message:"0或者正整数"}],tooltip:{overlayInnerStyle:{width:630},title:(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)("p",{children:"partition"}),(0,Z.jsxs)("p",{children:["序号大于等于此数字的容器组将被更新，小于此容器组的则不会被更新。",(0,Z.jsx)("br",{}),"如果分片为 0，则所有容器组都将被更新。",(0,Z.jsx)("br",{}),"如果分片为 3，则序号大于等于 3 的容器组将被更新，序号为 1、2 的容器组则保持不变。"]})]})},children:(0,Z.jsx)(m.Z,{style:{width:"100%"},placeholder:"0或者正整数（default：0）"})}),(0,Z.jsx)(p.Z.Item,{name:"max_unavailable",label:"最大不可用副本数",rules:[{required:!0,message:"最大不可用副本数不能为空"},{pattern:/^(?:[0-9]\d*|100(?:\.0+)?|(?:[0-9]|[1-9]\d)(?:\.\d+)?)%$/,message:"大于等于0的整数，或者正百分数"}],initialValue:"25%",tooltip:{overlayInnerStyle:{width:630},title:(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)("p",{children:"maxUnavailable"}),(0,Z.jsxs)("p",{children:["滚动更新过程中，不可用副本数的最大值。",(0,Z.jsx)("br",{}),"该取值可以是一个绝对值（例如：5），也可以是一个相对于期望副本数的百分比（例如：10%）；",(0,Z.jsx)("br",{}),"如果填写百分比，则以期望副本数乘以该百分比后向下取整的方式计算对应的绝对值；",(0,Z.jsx)("br",{}),"当最大超出副本数 maxSurge 为 0 时，此数值（maxUnavailable）不能为 0；默认值为 25%；",(0,Z.jsx)("br",{}),"例如：假设此值被设定为 30%，当滚动更新开始时，旧的副本集（ReplicaSet）可以缩容到期望 副本数的 70%；在新副本集扩容的过程中，一旦新的 Pod 已就绪，旧的副本集可以进一步缩容， 整个滚动更新过程中，确保新旧就绪副本数之和不低于期望副本数的 70%。"]})]})},children:(0,Z.jsx)(P.Z,{placeholder:"大于等于0的整数，或者正百分数（default：25%）"})}),(0,Z.jsx)(p.Z.Item,{name:"gracePeriodSeconds",label:"升级等待秒数",initialValue:0,tooltip:{title:(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)("p",{children:"gracePeriodSeconds"}),(0,Z.jsx)("p",{children:"如果配置了 gracePeriodSeconds 这个字段，控制器在原地升级的过程中会先把 Pod status 改为 not-ready，然后等一段时间（gracePeriodSeconds），最后再去修改 Pod spec 中的镜像版本。"})]}),overlayInnerStyle:{width:630}},rules:[{required:!0,message:"分片不能为空"},{pattern:/^(0|[1-9]\d*)$/,message:"0或者正整数"}],children:(0,Z.jsx)(P.Z,{placeholder:"大于等于0的整数（default：0）"})})]})]})})};n.default=function(){var e=(0,c.J)();return(0,Z.jsx)(Z.Fragment,{children:(0,Z.jsx)(o.Z,{type:"game-server-set",operationRender:function(n){return(0,Z.jsx)(d.Z,{modalRender:function(l){return(0,Z.jsx)(b,{initialValues:n.update_strategy,onCancel:l,onOk:function(){l(),e()}})},children:(0,Z.jsx)(g.ZP,{children:"更新策略"})})}})})}}}]);